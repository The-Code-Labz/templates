services:
  renovate-ce:
    image: ghcr.io/mend/renovate-ce:9.3.0
    restart: unless-stopped
    container_name: renovate-ce
    ports:
     - 8080:8080
    environment:
      LOG_LEVEL: debug  
       LOG_FORMAT: json 
      MEND_RNV_LICENSE_KEY: ${MEND_RNV_LICENSE_KEY} # Get Community Edition license key from https://www.mend.io/renovate-community/
      MEND_RNV_ACCEPT_TOS: Y # Set to 'Y' to accept Terms of Service
      # Provide connection details for the GitHub App
      # Available at: https://github.com/settings/apps/<your-renovate-app>
      MEND_RNV_PLATFORM: github
      MEND_RNV_GITHUB_APP_ID: ${MEND_RNV_GITHUB_APP_ID}                          
      MEND_RNV_GITHUB_APP_KEY: ${MEND_RNV_GITHUB_APP_KEY}                 # Private key
      MEND_RNV_WEBHOOK_SECRET: ${MEND_RNV_WEBHOOK_SECRET}             # Webhook secret (Defaults to 'renovate')
     #    GITLAB ACCOUNT
    #  MEND_RNV_PLATFORM: gitlab
    #  MEND_RNV_ENDPOINT: ${MEND_RNV_ENDPOINT}
    #  MEND_RNV_GITLAB_PAT: ${MEND_RNV_GITLAB_PAT}
    #  MEND_RNV_WEBHOOK_SECRET: ${MEND_RNV_WEBHOOK_SECRET}
      # Mend Renovate Application settings (Optional)
      # MEND_RNV_ADMIN_API_ENABLED: true  # Enable incoming API calls. Must set MEND_RNV_SERVER_API_SECRET.
      # MEND_RNV_SERVER_API_SECRET: ${MEND_RNV_SERVER_API_SECRET} # Required to enable APIs
      MEND_RNV_LOG_HISTORY_DIR: /logs  # Persist Renovate job logs - organized by org/rep/timestamp. Enable volume mount!
      # MEND_RNV_ENQUEUE_JOBS_ON_STARTUP: disabled  # Options: 'enabled', 'disabled', 'discovered' (default)
      # MEND_RNV_AUTODISCOVER_FILTER: org1/*, org2/test* # Renovate will only run on these repos
      # Connection details to the Postgres DB
      MEND_RNV_DATA_HANDLER_TYPE: postgresql
      POSTGRES_DATABASE: ${POSTGRES_DB}
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    # Enable volumes if persisting Renovate job logs
    volumes:
      # Tip: Create folders in advance to avoid permission issues (ie. when Renovate CLI tries to write logs)
      - ./logs:/logs   # Unix version
      - ./db:/db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 10s
      timeout: 3s
      retries: 3
#    labels: # (optional only for using traefik) ------>
#      - "traefik.enable=true"
#      - "traefik.http.routers.renovate-ce.entrypoints=websecure"
#      - "traefik.http.routers.renovate-ce.rule=Host(`renovate-ce.your-server.com`)" # Replace with your desired hostname
#      - "traefik.http.routers.renovate-ce.tls=true"
#      - "traefik.http.routers.renovate-ce.tls.certresolver=cloudflare" # Replace with your cert resolver name
#      - "traefik.http.services.renovate-ce.loadbalancer.server.port=8080"    
#      - "traefik.docker.network=nat" 
#      - "traefik.http.routers.renovate-ce.service=renovate-ce"
#      - "com.centurylinklabs.watchtower.enable=true"  # (optional if using watchtower for updates)
#      - "traefik.http.routers.renovate-ce.middlewares=authentik@file" # (optional if using authentik or basic auth to protect your site)      
    networks:
      - nat
      - nat2
    depends_on:
      postgres:
        condition: service_healthy
############################################################################################################      
  postgres:
    image: postgres:17-alpine
    container_name: postgres_renovate
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./postgres:/var/lib/postgresql/data
    networks:
      - nat2
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 10s
      timeout: 3s
      retries: 3
networks:
  nat:
    external: true
  nat2: 
    external: true