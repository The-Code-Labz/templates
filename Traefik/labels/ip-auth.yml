  labels:
      - "traefik.enable=true"

      # Authenticated Router (Non-Whitelisted IPs)
      - "traefik.http.routers.your-app-auth.rule=Host(`your.domain.com`) && !ipAllowList(REMOTE_ADDR, '192.59.59.21/32', '192.59.59.22/32')"  # Replace your.domain.com
      - "traefik.http.routers.your-app-auth.entrypoints=websecure" # Or "web" if you want to handle the redirect to HTTPS on the router
      - "traefik.http.routers.your-app-auth.middlewares=authentik"
      - "traefik.http.routers.your-app-auth.service=your-app-service" # MUST match your app service name

      # Whitelisted Router (Whitelisted IPs)
      - "traefik.http.routers.your-app-whitelist.rule=Host(`your.domain.com`)"  # Replace your.domain.com
      - "traefik.http.routers.your-app-whitelist.entrypoints=websecure" # Or "web" if you want to handle the redirect to HTTPS on the router
      - "traefik.http.routers.your-app-whitelist.service=your-app-service"  # MUST match your app service name
      - "traefik.http.routers.your-app-whitelist.priority=1"  # Give this a higher priority so that its matched first

      # Service Definition (Load Balancer)
      - "traefik.http.services.your-app-service.loadbalancer.server.port=8080" # Replace with your app port

      #Enables TLS for the Router (HTTPS)
      - "traefik.http.routers.your-app-auth.tls.certresolver=myresolver"
      - "traefik.http.routers.your-app-whitelist.tls.certresolver=myresolver"