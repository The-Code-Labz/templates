global:
  sendAnonymousUsage: false
#####################################
log:
  level: INFO    # (optional for testing) DEBUG
  format: common
##################################
accessLog: {}
api:
  dashboard: true
  debug: true
  insecure: true
###################################
entryPoints:
  web:
    address: ":80"
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
  websecure:
    address: ":443"
###################################################
metrics:
  prometheus:
    entryPoint: metrics
    addServicesLabels: true # Add service labels to metrics
    addRoutersLabels: true  # Add router labels to metrics
###################################################################
serversTransport:
  insecureSkipVerify: true
providers:
  docker:
    endpoint: "unix:///var/run/docker.sock"
    watch: true
    exposedByDefault: false
  file:
    directory: /config
    watch: true
#############################################################
certificatesResolvers:
  cloudflare:
    acme:
      email: example@example.com
      storage: acme.json
      caServer: https://acme-v02.api.letsencrypt.org/directory # prod (default)
     # caServer: https://acme-staging-v02.api.letsencrypt.org/directory # staging
      dnsChallenge:
        provider: cloudflare
 #       disablePropagationCheck: true # uncomment this if you have issues pulling certificates through cloudflare, By setting this flag to true disables the need to wait for the propagation of the TXT record to all authoritative name servers.
#        delayBeforeCheck: 120s # uncomment along with disablePropagationCheck if needed to ensure the TXT record is ready before verification is attempted
        resolvers:
          - "1.1.1.1:53"
          - "1.0.0.1:53"