services:
    archivebox:
        image: archivebox/archivebox:0.7.3
        container_name: archivebox
        ports:
            - 8000:8000  # (optional when using a reverse proxy like traefik or nginx-proxy manager)
        volumes:
            - ./data:/data
            # ./data/personas/Default/chrome_profile/Default:/data/personas/Default/chrome_profile/Default
        environment:
            - ADMIN_USERNAME=${ADMIN_USERNAME}            # creates an admin user on first run with the given user/pass combo
            - ADMIN_PASSWORD=${ADMIN_PASSWORD}
            - ALLOWED_HOSTS=*                   # set this to the hostname(s) you're going to serve the site from!
            - CSRF_TRUSTED_ORIGINS=http://localhost:8000  # you MUST set this to the server's URL for admin login and the REST API to work
            - PUBLIC_INDEX=True                 # set to False to prevent anonymous users from viewing snapshot list
            - PUBLIC_SNAPSHOTS=True             # set to False to prevent anonymous users from viewing snapshot content
            - PUBLIC_ADD_VIEW=False             # set to True to allow anonymous users to submit new URLs to archive
            - SEARCH_BACKEND_ENGINE=sonic       # tells ArchiveBox to use sonic container below for fast full-text search
            - SEARCH_BACKEND_HOST_NAME=sonic
            - SEARCH_BACKEND_PASSWORD=SomeSecretPassword
            - PUID=${PUID}                        # set to your host user's UID & GID if you encounter permissions issues
            - PGID=${PGID}                        # UID/GIDs lower than 500 may clash with system uids and are not recommended
            # For options below, it's better to set in data/ArchiveBox.conf or use `docker compose run archivebox config --set SOME_KEY=someval` instead of setting here:
            # - MEDIA_MAX_SIZE=750m             # increase this filesize limit to allow archiving larger audio/video files
            # - TIMEOUT=60                      # increase this number to 120+ seconds if you see many slow downloads timing out
            # - CHECK_SSL_VALIDITY=True         # set to False to disable strict SSL checking (allows saving URLs w/ broken certs)
            # - SAVE_ARCHIVE_DOT_ORG=True       # set to False to disable submitting all URLs to Archive.org when archiving
            # - USER_AGENT="..."                # set a custom USER_AGENT to avoid being blocked as a bot
            # ...
            # For more info, see: https://github.com/ArchiveBox/ArchiveBox/wiki/Docker#configuration
#           labels: # (optional only for using traefik) ------>
#             - "traefik.enable=true"
#             - "traefik.http.routers.archivebox.entrypoints=websecure"
#             - "traefik.http.routers.archivebox.rule=Host(`archivebox.example.com`)" # Replace with your desired hostname
#             - "traefik.http.routers.archivebox.tls=true"
#             - "traefik.http.routers.archivebox.tls.certresolver=cloudflare" # Replace with your cert resolver name
#             - "traefik.http.services.archivebox.loadbalancer.server.port=8000"    
#             - "traefik.docker.network=nat" 
#             - "traefik.http.routers.archivebox.service=archivebox"  
#             - "com.centurylinklabs.watchtower.enable=true"  # (optional if using watchtower for updates)
#             - "traefik.http.routers.archivebox.middlewares=authentik@file" # (optional if using authentik or basic auth to protect your site)        
        # For ad-blocking during archiving, uncomment this section and the pihole service below or your own adblocking service or dns server
         networks: #(optional)
           - nat
        # dns:
        #   - 172.20.0.53
        healthcheck:
            test: ["CMD", "wget", "--spider", "-S", "http://localhost:8000"]
            interval: 1m30s
            timeout: 10s
            retries: 3
        restart: unless-stopped
        depends_on:
            sonic:
                condition: service_healthy
#########################################################################
    ######## Optional Scheduler ########
    archivebox_scheduler:
        image: archivebox/archivebox:0.7.3
        container_name: archivebox_scheduler
        command: schedule --foreground --update --every=day
        environment:
            - PUID=${PUID}                        # set to your host user's UID & GID if you encounter permissions issues
            - PGID=${PGID}                        # UID/GIDs lower than 500 may clash with system uids and are not recommended
            - TIMEOUT=120                       # use a higher timeout than the main container to give slow tasks more time when retrying
            - SEARCH_BACKEND_ENGINE=sonic       # tells ArchiveBox to use sonic container below for fast full-text search
            - SEARCH_BACKEND_HOST_NAME=sonic
            - SEARCH_BACKEND_PASSWORD=SomeSecretPassword
        volumes:
            - ./data:/data
        # cpus: 2                               # uncomment / edit these values to limit scheduler container resource consumption
        # mem_limit: 2048m
        # restart: always
        networks:
          - nat
        depends_on:
            sonic:
                condition: service_healthy
        restart: unless-stopped
###########################################################################
    sonic:
        image: archivebox/sonic:latest
        restart: unless-stopped
        container_name: archivebox_sonic
        expose:
            - 1491
        environment:
            - SEARCH_BACKEND_PASSWORD=${SEARCH_BACKEND_PASSWORD}
        volumes:
            #- ./sonic.cfg:/etc/sonic.cfg:ro    # mount to customize: https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/stable/etc/sonic.cfg
            - ./data/sonic:/var/lib/sonic/store
#        labels: # (optional only for using traefik) ------>
#            - "traefik.enable=true"
#            - "traefik.http.routers.archivebox-sonic.entrypoints=websecure"
#            - "traefik.http.routers.archivebox-sonic.rule=Host(`archivebox-sonic.example.com`)" # Replace with your desired hostname
#            - "traefik.http.routers.archivebox-sonic.tls=true"
#            - "traefik.http.routers.archivebox-sonic.tls.certresolver=cloudflare" # Replace with your cert resolver name
#            - "traefik.http.services.archivebox-sonic.loadbalancer.server.port=1491"    
#            - "traefik.docker.network=nat" 
#            - "traefik.http.routers.archivebox-sonic.service=archivebox-sonic"  
#            - "com.centurylinklabs.watchtower.enable=true"  # (optional if using watchtower for updates)
#            - "traefik.http.routers.archivebox-sonic.middlewares=authentik@file" # (optional if using authentik or basic auth to protect your site)  
        networks:
          - nat
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "wget", "--spider", "-S", "http://localhost:1491"]
            interval: 1m30s
            timeout: 10s
            retries: 3          
##################################################################################
    ### This optional container runs xvfb+noVNC so you can watch the ArchiveBox browser as it archives things,
    # or remote control it to set up a chrome profile w/ login credentials for sites you want to archive.
    novnc:
        image: theasp/novnc:latest
        container_name: archivebox_novnc
        restart: unless-stopped
        environment:
            - DISPLAY_WIDTH=1920
            - DISPLAY_HEIGHT=1080
            - RUN_XTERM=no
        ports:
            # to view/control ArchiveBox's browser, visit: http://127.0.0.1:8080/vnc.html
            # restricted to access from localhost by default because it has no authentication
            - 8080:8080
#        labels: # (optional only for using traefik) ------>
#            - "traefik.enable=true"
#            - "traefik.http.routers.archivebox-novnc.entrypoints=websecure"
#            - "traefik.http.routers.archivebox-novnc.rule=Host(`archivebox-novnc.example.com`)" # Replace with your desired hostname
#            - "traefik.http.routers.archivebox-novnc.tls=true"
#            - "traefik.http.routers.archivebox-novnc.tls.certresolver=cloudflare" # Replace with your cert resolver name
#            - "traefik.http.services.archivebox-novnc.loadbalancer.server.port=8080"    
#            - "traefik.docker.network=nat" 
#            - "traefik.http.routers.archivebox-novnc.service=archivebox-novnc"  
#            - "com.centurylinklabs.watchtower.enable=true"  # (optional if using watchtower for updates)
#            - "traefik.http.routers.archivebox-novnc.middlewares=authentik@file" # (optional if using authentik or basic auth to protect your site)
        networks:
          - nat
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "wget", "--spider", "-S", "http://localhost:8080"]
            interval: 1m30s
            timeout: 10s
            retries: 3
################################################################################################
    ### Example: To run pihole in order to block ad/tracker requests during archiving,
    # uncomment this optional block and set up pihole using its admin interface
    # pihole:
    #   image: pihole/pihole:latest
    #   container_name: pihole
    #   restart: always
    #   ports:
    #     # access the admin HTTP interface on http://localhost:8090
    #     - 8090:80
    #   environment:
    #     - WEBPASSWORD=${WEBPASSWORD} # (password for the admin dashboard)
    #     - natMASQ_LISTENING=all
    #   dns:
    #     - 127.0.0.1
    #     - 1.1.1.1
    #   networks:
    #     nat:
    #       ipv4_address: 172.20.0.53
    #   volumes:
    #     - ./etc/pihole:/etc/pihole
    #     - ./etc/dnsmasq:/etc/dnsmasq.d
#       labels: # (optional only for using traefik) ------>
#          - "traefik.enable=true"
#          - "traefik.http.routers.pihole.entrypoints=websecure"
#          - "traefik.http.routers.pihole.rule=Host(`pihole.example.com`)" # Replace with your desired hostname
#          - "traefik.http.routers.pihole.tls=true"
#          - "traefik.http.routers.pihole.tls.certresolver=cloudflare" # Replace with your cert resolver name
#          - "traefik.http.services.pihole.loadbalancer.server.port=80"    
#          - "traefik.docker.network=nat" 
#          - "traefik.http.routers.pihole.service=pihole"  
#          - "com.centurylinklabs.watchtower.enable=true"  # (optional if using watchtower for updates)
#          - "traefik.http.routers.pihole.middlewares=authentik@file" # (optional if using authentik or basic auth to protect your site)
###################################################################################################
    ### Example: run all your ArchiveBox traffic through a WireGuard VPN tunnel to avoid IP blocks.
    # You can also use any other VPN that works at the docker/IP level, e.g. Tailscale, OpenVPN, etc.
####################### ------------------->
    # wireguard:
    #   image: linuxserver/wireguard:latest
    #   network_mode: 'service:archivebox'
    #   cap_add:
    #     - NET_ADMIN
    #     - SYS_MODULE
    #   sysctls:
    #     - net.ipv4.conf.all.rp_filter=2
    #     - net.ipv4.conf.all.src_valid_mark=1
    #   volumes:
    #     - /lib/modules:/lib/modules
    #     - ./wireguard.conf:/config/wg0.conf:ro
################################# <----------------
####################### ------------------->
    ### Example: Run ChangeDetection.io to watch for changes to websites, then trigger ArchiveBox to archive them
    # Documentation: https://github.com/dgtlmoon/changedetection.io
    # More info: https://github.com/dgtlmoon/changedetection.io/blob/master/docker-compose.yml

    # changedetection:
    #     image: ghcr.io/dgtlmoon/changedetection.io
    #     volumes:
    #         - ./data-changedetection:/datastore
################################# <----------------
    ### Example: Run PYWB in parallel and auto-import WARCs from ArchiveBox
####################### ------------------->
    # pywb:
    #     image: webrecorder/pywb:latest
    #     entrypoint: /bin/sh -c '(wb-manager init default || test $$? -eq 2) && wb-manager add default /archivebox/archive/*/warc/*.warc.gz; wayback;'
    #     environment:
    #         - INIT_COLLECTION=archivebox
    #     ports:
    #         - 8686:8080
    #     volumes:
    #         - ./data:/archivebox
    #         - ./data/wayback:/webarchive
################################# <----------------
networks:
    # network just used for pihole container to offer :53 dns resolving on fixed ip for archivebox container
    nat:
      ipam:
        driver: default
        config:
            - subnet: 172.20.0.0/24