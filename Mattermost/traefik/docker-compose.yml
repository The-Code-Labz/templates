services:
  mattermost:
    image: 'mattermost/mattermost-team-edition:release-9.11'
    platform: linux/amd64
    volumes:
      - '/mattermost/config:/mattermost/config'
      - '/mattermost/data:/mattermost/data'
      - '/mattermost/logs:/mattermost/logs'
      - '/mattermost/plugins:/mattermost/plugins'
      - '/mattermost/client-plugins:/mattermost/client/plugins'
      - '/mattermost/index:/mattermost/bleve-indexes'
    environment:
      MM_SERVICESETTINGS_SITEURL: '${SERVICE_FQDN_MATTERMOST}'
      TZ: AMERICA/LOS_ANGELES
      MM_SQLSETTINGS_DRIVERNAME: postgres
      MM_SQLSETTINGS_DATASOURCE: 'postgres://${MM_SERVICE_USER_POSTGRES}:${MM_SERVICE_PASSWORD_POSTGRES}@postgres-mattermost:5432/${POSTGRES_DB:-mattermost}?sslmode=disable&connect_timeout=10' # Changed hostname to postgres-mattermost
      MM_BLEVESETTINGS_INDEXDIR: /mattermost/bleve-indexes
    depends_on:
      postgres-mattermost: # Ensure dependency is on postgres-mattermost
        condition: service_healthy
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - 'http://127.0.0.1:8065'
      interval: 5s
      timeout: 20s
      retries: 10
    container_name: mattermost
    restart: unless-stopped
    networks:
      - nat
      - nat2
#    ports:
#      - 8065:8065
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mattermost.entrypoints=websecure"
      - "traefik.http.routers.mattermost.rule=Host(`mattermost.example.com`)" # Replace with your desired hostname
      - "traefik.http.routers.mattermost.tls=true"
      - "traefik.http.routers.mattermost.tls.certresolver=cloudflare" # Replace with your cert resolver name
      - "traefik.http.services.mattermost.loadbalancer.server.port=8065"       
      - "traefik.docker.network=nat" 
      - "traefik.http.routers.mattermost.service=mattermost"
###########################################################################################################
  postgres:
    image: 'postgres:17-alpine'
    volumes:
      - '/mattermost/postgres:/var/lib/postgresql/data' # Corrected volume mount - using dedicated directory
    environment:
      POSTGRES_USER: ${MM_SERVICE_USER_POSTGRES}
      POSTGRES_PASSWORD: ${MM_SERVICE_PASSWORD_POSTGRES}
      POSTGRES_DB: '${POSTGRES_DB:-mattermost}'
    healthcheck:
      test:
        - CMD-SHELL
        - 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'
      interval: 5s
      timeout: 20s
      retries: 10
    container_name: postgres_mattermost
    restart: always
    networks:
      - nat2
networks:
  nat:
    external: true
  nat2:
    external: true    