services:
  hoarder:
    image: 'ghcr.io/hoarder-app/hoarder:release'
    volumes:
      - '/hoarder/data:/data'
    environment:
      NEXTAUTH_SECRET: ${SECRET}
      MEILI_MASTER_KEY: '${MELI_MASTER_KEY}'
      NEXTAUTH_URL: ''
      MEILI_ADDR: 'http://meilisearch:7700'
      BROWSER_WEB_URL: 'http://chrome:9222'
      OPENAI_API_KEY: '${OPENAI_KEY}'
      DISABLE_SIGNUPS: true
      DATA_DIR: /data
      SERVICE_PASSWORD_HOARDERNEXTAUTH: '${HOARD_AUTH_PASS}'
      SERVICE_PASSWORD_MEILI: '${MELI_PASSWORD}'
      SERVICE_OPENAI_API_KEY: '${OPENAI_KEY}'
      SERVICE_ENABLE_SIGNUPS: 'false'
    container_name: hoarder
    restart: unless-stopped
    env_file:
      - .env
#    ports:
#      - 3000:3000
    networks:
      - nat
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hoarder.entrypoints=websecure"
      - "traefik.http.routers.hoarder.rule=Host(`hoarder.example.com`)" # Replace with your desired hostname
      - "traefik.http.routers.hoarder.tls=true"
      - "traefik.http.routers.hoarder.tls.certresolver=cloudflare" # Replace with your cert resolver name
      - "traefik.http.services.hoarder.loadbalancer.server.port=3000"       
      - "traefik.docker.network=nat" 
      - "traefik.http.routers.hoarder.service=hoarder"
########################################################################################################
  chrome:
    image: 'gcr.io/zenika-hub/alpine-chrome:124'
    command:
      - '--no-sandbox'
      - '--disable-gpu'
      - '--disable-dev-shm-usage'
      - '--remote-debugging-address=0.0.0.0'
      - '--remote-debugging-port=9222'
      - '--hide-scrollbars'
    container_name: chrome_hoarder
    env_file:
      - .env
    volumes:
      - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket
    restart: unless-stopped
#    ports:
#     - 9222:9222
    networks:
      - nat
##################################################################################################     
  meilisearch:
    image: 'getmeili/meilisearch:v1.13'
    environment:
      MEILI_NO_ANALYTICS: '${MEILI_NO_ANALYTICS:-true}'
      NEXTAUTH_SECRET: '${SECRET}'
      MEILI_MASTER_KEY: '${MELI_MASTER_KEY}'
      NEXTAUTH_URL: ''
      SERVICE_PASSWORD_HOARDERNEXTAUTH: '${HOARD_AUTH_PASS}'
      SERVICE_PASSWORD_MEILI: '${MELI_PASSWORD}'
    volumes:
      - '/hoarder/meli:/meili_data'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - 'http://127.0.0.1:7700/health'
      interval: 2s
      timeout: 10s
      retries: 15
    container_name: meilisearch_hoarder
    env_file:
      - .env
    restart: unless-stopped
#    ports:
#     - 7700:7700
    networks:
      - nat
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.meilisearch-hoarder.entrypoints=websecure"
      - "traefik.http.routers.meilisearch-hoarder.rule=Host(`meilisearch-hoarder.example.com`)" # Replace with your desired hostname
      - "traefik.http.routers.meilisearch-hoarder.tls=true"
      - "traefik.http.routers.meilisearch-hoarder.tls.certresolver=cloudflare" # Replace with your cert resolver name
      - "traefik.http.services.meilisearch-hoarder.loadbalancer.server.port=7700"       
      - "traefik.docker.network=nat" 
      - "traefik.http.routers.meilisearch-hoarder.service=meilisearch-hoarder"
#########################################################################################      
networks:
  nat:
    external: true
