services:
  mixpost:
    image: 'inovector/mixpost:v2.1.3'
    container_name: mixpost
    restart: unless-stopped
    environment:
      APP_NAME: Mixpost
      APP_KEY: '${SERVICE_BASE64_MIXPOST}'
      APP_DEBUG: true # Set to false in production
      APP_DOMAIN: '${SERVICE_URL_MIXPOST}'
      APP_URL: '${SERVICE_FQDN_MIXPOST}'
      DB_DATABASE: '${MIXPOST_MYSQL_DATABASE:-mixpost_db}'
      DB_USERNAME: '${MIXPOST_SERVICE_USER_MYSQL}'
      DB_PASSWORD: '${MIXPOST_SERVICE_PASSWORD_MYSQL}'
      SSL_EMAIL: '${SSL_EMAIL:-user@example.com}'
    volumes:
      - './app:/var/www/html/storage/app'
      - './logs:/var/www/html/storage/logs'
    depends_on:
      mysql:
        condition: service_healthy
      redis-mixpost:
        condition: service_healthy
    networks:
      - nat
      - nat2
    ports:
      - 80:80
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 5s
      retries: 3
#    labels: # (optional only for using traefik) ------>
#      - "traefik.enable=true"
#      - "traefik.http.routers.mixpost.entrypoints=websecure"
#      - "traefik.http.routers.mixpost.rule=Host(`mixpost.example.com`)" # Replace with your desired hostname
#      - "traefik.http.routers.mixpost.tls=true"
#      - "traefik.http.routers.mixpost.tls.certresolver=cloudflare" # Replace with your cert resolver name
#      - "traefik.http.services.mixpost.loadbalancer.server.port=80"    
#      - "traefik.docker.network=nat" 
#      - "traefik.http.routers.mixpost.service=mixpost"  
#      - "com.centurylinklabs.watchtower.enable=true"  # (optional if using watchtower for updates)
#      - "traefik.http.routers.mixpost.middlewares=authentik@file" # (optional if using authentik or basic auth to protect your site)
#########################################################################################################
  mysql:
    image: 'mysql/mysql-server:8.0'
    container_name: mysql_mixpost
    restart: always
    environment:
      MYSQL_DATABASE: '${MIXPOST_MYSQL_DATABASE:-mixpost_db}'
      MYSQL_USER: '${MIXPOST_SERVICE_USER_MYSQL}'
      MYSQL_PASSWORD: '${MIXPOST_SERVICE_PASSWORD_MYSQL}'
      MYSQL_ROOT_PASSWORD: '${MIXPOST_SERVICE_PASSWORD_MYSQLROOT}'
    volumes:
      - './mysql:/var/lib/mysql'
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - '-h'
        - 127.0.0.1
        - '-uroot'
        - '-p'
      interval: 5s
      timeout: 20s
      retries: 10
    networks:
      - nat2
###########################################################################################################
  redis: # Renamed service for clarity
    image: 'redis:alpine'
    container_name: redis_mixpost_app # Renamed container for clarity
    restart: always
    healthcheck:
      test:
        - CMD
        - redis-cli
        - '--raw'
        - incr
        - ping
    networks:
      - nat2        
#########################################################################################################        
networks:
  nat:
    external: true
  nat2:
    external: true    